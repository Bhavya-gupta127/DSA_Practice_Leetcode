/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode(int x) : val(x), next(NULL) {}
  * };
  */ 
 class   Solution   { 
 public : 
      bool   hasCycle ( ListNode  * head )   { 
          if ( head == NULL   ||  head -> next == NULL ) 
              return   false ; 
         
         ListNode *  hare = head -> next -> next ; 
         ListNode *  tortoise = head ; 
          while ( hare != tortoise ) 
          { 
              if ( hare == NULL   ||  tortoise == NULL   ||  hare -> next == NULL ) 
                  return   false ; 
             
             hare = hare -> next -> next ; 
             tortoise = tortoise -> next ; 
          } 
         
          // for(int i=0;i<pos;i++) 
          // { 
          //     head=head->next; 
          // } 
          // if(head==hare) 
          //     return true; 
          return   true ; 
      } 
 } ;