/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
      bool   isCompleteTree ( TreeNode *  root )   { 
         queue < TreeNode * > q ; 
         q . push ( root ) ; 
          int  n = 0 ; 
          bool  last = false ; 
          bool  both = false ; 
          bool  single = false ; 
          while ( ! q . empty ( ) ) 
          { 
              int  s = q . size ( ) ; 
              for ( int  i = 0 ; i < s ; i ++ ) 
              { 
                 TreeNode *  node = q . front ( ) ; 
                 q . pop ( ) ; 
                  if ( node -> left == NULL   &&  node -> right == NULL ) 
                     both = true ; 
                  else   if ( node -> left != NULL   &&  node -> right != NULL ) 
                  { 
                      if ( both  ||  single ) 
                          return   false ; 
                     q . push ( node -> left ) ; 
                     q . push ( node -> right ) ; 
                  } 
                  else   if ( node -> left != NULL ) 
                  { 
                      if ( both  ||  single ) 
                          return   false ; 
                     q . push ( node -> left ) ; 
                     single = true ; 
                  } 
                  else  
                      return   false ; 
              } 
          } 
          return   true ; 
      } 
 } ;