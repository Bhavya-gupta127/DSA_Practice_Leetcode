class   Solution   { 
 public : 
      int   solve ( int  i ,   int  j ,  string &  t1 , string &  t2 , vector < vector < int >> & dp ) 
      { 
          if ( i >= t1 . size ( )   ||  j  >=  t2 . size ( ) ) 
              return   0 ; 
          if ( dp [ i ] [ j ] != - 1 ) 
              return  dp [ i ] [ j ] ; 
          int  a = 0 , b = 0 , c = 0 ; 
         a = solve ( i + 1 , j , t1 , t2 , dp ) ; 
         b = solve ( i , j + 1 , t1 , t2 , dp ) ; 
         c = solve ( i + 1 , j + 1 , t1 , t2 , dp ) ; 
          if ( t1 [ i ] == t2 [ j ] ) 
             c ++ ; 
 
          return  dp [ i ] [ j ] = max ( c , max ( a , b ) ) ; 
      } 
      int   longestCommonSubsequence ( string text1 ,  string text2 )   { 
          int  n = max ( text1 . size ( ) , text2 . size ( ) ) ; 
         vector < vector < int >> dp ( n , vector < int > ( n , - 1 ) ) ; 
          return   solve ( 0 , 0 , text1 , text2 , dp ) ; 
      } 
 } ;