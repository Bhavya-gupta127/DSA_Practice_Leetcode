class   Solution   { 
 public : 
     
 //     brute force O(nk) time O(1) space 
 //     void rightshift(vector<int>&nums) 
 //     { 
 //         int temp1=nums[0]; 
 //         nums[0]=nums[nums.size()-1]; 
 //         int temp2; 
 //         for(int i=1;i<nums.size();i++) 
 //         { 
 //             temp2=nums[i]; 
 //             nums[i]=temp1; 
 //             temp1=temp2; 
 //         } 
         
 //     } 
      void   rotate ( vector < int > &  nums ,   int  k )   { 
          
          int  n = nums . size ( ) ; 
          if ( n == 1 ) 
              return   ; 
          // for(int i=0;i<k;i++) 
          // { 
          //     rightshift(nums); 
          // } 
         
         k = k % n ; 
         vector < int > temp ; 
          int  x = ( n - k ) ; 
          for ( int  i = x ; i < n ; i ++ ) 
             temp . push_back ( nums [ i ] ) ; 
          for ( int  i = 0 ; i < x ; i ++ ) 
             temp . push_back ( nums [ i ] ) ; 
         nums = temp ; 
      } 
 } ;