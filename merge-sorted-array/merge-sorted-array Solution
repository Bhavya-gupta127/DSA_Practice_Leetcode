class   Solution   { 
 public : 
      void   merge ( vector < int > &  nums1 ,   int  m ,  vector < int > &  nums2 ,   int  n )   { 
         
         
          //using extra space 
         
 //         vector<int>ans; 
 //         int p1=0; 
 //         int p2=0; 
 //         while(true) 
 //         { 
 //             if(p1==m && p2==n) 
 //                 break; 
 //             else if (p1>=m && p2<n) 
 //             { 
 //                 while(p2<n) 
 //                 { 
 //                     ans.push_back(nums2[p2]); 
 //                     p2++; 
 //                 } 
 //                 break; 
 //             } 
 //             else if (p1<m && p2>=n) 
 //             { 
 //                 while(p1<m) 
 //                 { 
 //                     ans.push_back(nums1[p1]); 
 //                     p1++; 
 //                 } 
 //                 break; 
 //             } 
             
 //             if(nums1[p1]<=nums2[p2]) 
 //             { 
 //                 ans.push_back(nums1[p1]); 
 //                 p1++; 
 //             } 
 //             else 
 //             { 
 //                 ans.push_back(nums2[p2]); 
 //                 p2++; 
 //             } 
 //         } 
         
 //         for(int i=0;i<n+m;i++) 
 //         { 
 //             nums1[i]=ans[i]; 
 //         } 
 //         return ; 
         
         
          for ( int  i = m ; i < n + m ; i ++ ) 
          { 
             nums1 [ i ] = nums2 [ i - m ] ; 
          } 
          sort ( nums1 . begin ( ) , nums1 . end ( ) ) ; 
          return   ; 
      } 
 } ;