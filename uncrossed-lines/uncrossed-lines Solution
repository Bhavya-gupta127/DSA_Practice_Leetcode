class   Solution   { 
 public : 
      int   solve ( int  i , int  j , vector < int > & nums1 , vector < int > & nums2 , vector < vector < int >> & dp ) 
      { 
          if ( i >= nums1 . size ( )   ||  j >= nums2 . size ( )   ||  i < 0   ||  j < 0 ) 
              return   0 ; 
          if ( dp [ i ] [ j ] != - 1 ) 
              return  dp [ i ] [ j ] ; 
          int  pick = 0 , notpick = 0 ; 
          for ( int  x = j ; x < nums2 . size ( ) ; x ++ ) 
          { 
              if ( nums1 [ i ] == nums2 [ x ] ) 
              { 
                 pick = solve ( i + 1 , x + 1 , nums1 , nums2 , dp ) + 1 ; 
                  break ; 
              } 
          } 
         notpick = solve ( i + 1 , j , nums1 , nums2 , dp ) ; 
          return  dp [ i ] [ j ] = max ( pick , notpick ) ; 
 
      } 
      int   maxUncrossedLines ( vector < int > &  nums1 ,  vector < int > &  nums2 )   { 
         vector < vector < int >> dp ( nums1 . size ( ) , vector < int > ( nums2 . size ( ) , - 1 ) ) ; 
          return   solve ( 0 , 0 , nums1 , nums2 , dp ) ; 
      } 
 } ;