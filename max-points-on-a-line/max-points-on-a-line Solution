class   Solution   { 
  public : 
      int  ans = 0 ; 
      bool   check ( int  x1 , int  y1 , int  x2 ,   int  y2 ,   int  x , int  y ) 
      { 
          if ( y1 == y2  ||  y2 == y )  
          { 
              if ( y2 == y  &&  y1 == y2 ) 
                  return   true ; 
              return   false ; 
          } 
          if ( x1 == x2  ||  x2 == x ) 
          { 
              if ( x2 == x  &&  x1 == x2 ) 
                  return   true ; 
              return   false ; 
          } 
          double  temp1 = ( double ) ( x2 - x1 ) / ( double ) ( y2 - y1 ) ; 
          double  temp = ( double ) ( x2 - x ) / ( double ) ( y2 - y ) ; 
          if ( temp1 == temp ) 
              return   true ; 
          return   false ; 
      } 
      void   solve ( int  x1 , int  y1 , int  x2 , int  y2 , vector < vector < int >> &  points ) 
      { 
          int  cnt = 0 ; 
          for ( int  i = 0 ; i < points . size ( ) ; i ++ ) 
          { 
              int  x = points [ i ] [ 0 ] ; 
              int  y = points [ i ] [ 1 ] ; 
              if ( ( x1 == x  &&  y1 == y )   ||   ( x2 == x  &&  y2 == y )   ||   check ( x1 , y1 , x2 , y2 , x , y ) ) 
                 cnt ++ ; 
          } 
         ans = max ( ans , cnt ) ; 
      } 
      int   maxPoints ( vector < vector < int >> &  points )   { 
          if ( points . size ( ) < 3 ) 
              return  points . size ( ) ; 
          for ( int  i = 0 ; i < points . size ( ) ; i ++ ) 
              for ( int  j = i + 1 ; j < points . size ( ) ; j ++ ) 
                  solve ( points [ i ] [ 0 ] , points [ i ] [ 1 ] , points [ j ] [ 0 ] , points [ j ] [ 1 ] , points ) ; 
          return  ans ; 
      } 
 
 
  } ;