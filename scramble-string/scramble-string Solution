class   Solution   { 
 public : 
     unordered_map < string , bool > dp ; 
      bool   solve ( string s1 , string s2 ) 
      { 
          if ( s1 == s2 ) 
              return   true ; 
         string key = s1 + "*" + s2 ; 
          if ( dp . count ( key ) ) 
              return  dp [ key ] ; 
          for ( int  i = 1 ; i < s1 . size ( ) ; i ++ ) 
          { 
              bool  noswap = solve ( s1 . substr ( 0 , i ) , s2 . substr ( 0 , i ) )   &&   solve ( s1 . substr ( i ) , s2 . substr ( i ) ) ; 
              bool  swap = solve ( s1 . substr ( 0 , i ) , s2 . substr ( s2 . size ( ) - i ) )   &&   solve ( s1 . substr ( i ) , s2 . substr ( 0 , s2 . size ( ) - i ) ) ; 
              if ( swap  ||  noswap ) 
                  return  dp [ key ] = true ; 
          } 
          return  dp [ key ] = false ; 
      } 
      bool   isScramble ( string s1 ,  string s2 )   { 
          return   solve ( s1 , s2 ) ;    
      } 
 } ;