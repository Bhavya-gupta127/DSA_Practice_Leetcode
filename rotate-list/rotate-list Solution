/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   rotateRight ( ListNode *  head ,   int  k )   { 
         
          if ( head == NULL ) 
              return  head ; 
         
         
         ListNode  *  ptr = head ; 
          int  n = 1 ; 
          while ( ptr -> next != NULL ) 
          { 
             n ++ ; 
             ptr = ptr -> next ; 
          } 
         ptr -> next = head ; 
         
          //this is now cyclic 
         
         
          for ( int  i = 0 ; i < n - k % n - 1 ; i ++ ) 
          { 
             head = head -> next ; 
          } 
         ptr = head -> next ; 
         head -> next = NULL ; 
          return  ptr ; 
      } 
 } ;