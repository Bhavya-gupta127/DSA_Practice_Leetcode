class   Solution   { 
 public : 
      int   findMaximizedCapital ( int  k ,   int  w ,  vector < int > &  profits ,  vector < int > &  capital )   { 
         vector < pair < int , int >> v ; 
          for ( int  i = 0 ; i < profits . size ( ) ; i ++ ) 
             v . push_back ( { capital [ i ] , profits [ i ] } ) ; 
          sort ( v . begin ( ) , v . end ( ) ) ;         
          for ( auto  i : v ) 
             cout << i . first << " " << i . second << "\n" ; 
         priority_queue < int > pq ; 
          int  i = 0 ; 
          while ( k > 0 ) 
          { 
              while ( i < v . size ( )   &&  v [ i ] . first <= w ) 
                 pq . push ( v [ i ++ ] . second ) ; 
              if ( pq . empty ( ) ) 
                  return  w ; 
             w += pq . top ( ) ; 
             pq . pop ( ) ; 
             k -- ; 
          } 
          return  w ; 
      } 
 } ;