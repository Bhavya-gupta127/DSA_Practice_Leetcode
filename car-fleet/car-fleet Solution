class   Solution   { 
 public : 
      int   carFleet ( int  target ,  vector < int > &  position ,  vector < int > &  speed )   { 
         vector < pair < int , int >> v ; 
          for ( int  i = 0 ; i < position . size ( ) ; i ++ ) 
             v . push_back ( { position [ i ] , speed [ i ] } ) ; 
          sort ( v . begin ( ) , v . end ( ) ) ; 
         stack < double > st ; 
          int  ans = 0 ; 
         st . push ( ( double ) ( target - v . back ( ) . first ) / v . back ( ) . second ) ; 
          for ( int  i = v . size ( ) - 2 ; i >= 0 ; i -- ) 
          { 
              double  temp = ( double ) ( target - v [ i ] . first ) / v [ i ] . second ; 
              if ( st . top ( ) < temp ) 
              { 
                  while ( ! st . empty ( ) ) 
                     st . pop ( ) ; 
                 ans ++ ; 
                 st . push ( temp ) ; 
              } 
          } 
          if ( ! st . empty ( ) ) 
             ans ++ ; 
          return  ans ; 
      } 
 } ;