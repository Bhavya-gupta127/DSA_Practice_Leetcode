class   Solution   { 
  public : 
      bool   checkSubarraySum ( vector < int > &  nums ,   int  k )   { 
         
         
          int  presum = 0 ; 
         
         unordered_map < int , int >  mp ; 
          for ( int  i = 0 ; i < nums . size ( ) ; i ++ ) 
          { 
             presum += nums [ i ] ; 
             presum %= k ; 
             
              if ( presum == 0   &&  i != 0 )    //3,2,-5 && k=4 
                  return   true ; 
             
             
              if ( mp . find ( presum ) != mp . end ( ) )   //repetition b/w sum is 0 
              { 
                  if ( i - mp [ presum ] > 1 )     // 2 element chk 
                      return   true ; 
              } 
              else      //Necessary  4 4 && k=6 
                 mp [ presum ] = i ; 
          } 
         
          return   false ; 
      } 
  } ;