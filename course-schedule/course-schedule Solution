class   Solution   { 
 public : 
      bool   canFinish ( int  numCourses ,  vector < vector < int >> &  prerequisites )   { 
         vector < vector < int >> adj ( numCourses ) ; 
         vector < int > indegree ( numCourses , 0 ) ; 
          for ( auto  i : prerequisites ) 
          { 
             adj [ i [ 1 ] ] . push_back ( i [ 0 ] ) ; 
             indegree [ i [ 0 ] ] ++ ; 
          } 
          //toposort 
         queue < int > q ; 
          for ( int  i = 0 ; i < numCourses ; i ++ ) 
          {    
              if ( indegree [ i ] == 0 ) 
                 q . push ( i ) ; 
              // cout<<i<<" "; 
          } 
          while ( ! q . empty ( ) ) 
          { 
              int  cur = q . front ( ) ; 
             q . pop ( ) ; 
              for ( auto  i  :  adj [ cur ] ) 
              { 
                 indegree [ i ] -- ; 
                  if ( indegree [ i ] == 0 ) 
                     q . push ( i ) ; 
              } 
          } 
          for ( auto  i : indegree ) 
          { 
              // cout<<i<<" "; 
              if ( i > 0 ) 
                  return   false ; 
          } 
          return   true ; 
      } 
 } ;