class   Solution   { 
  private : 
      void   dfs ( int  i , int  j , int  c , int  newc , vector < vector < int >> & image ) 
      { 
          int  n = image . size ( ) ; 
          int  m = image [ 0 ] . size ( ) ; 
          if ( i < 0   ||  j < 0   ||  i >= n  ||  j >= m  ||  image [ i ] [ j ] != c  ||  image [ i ] [ j ] == newc ) 
              return ; 
 
         image [ i ] [ j ] = newc ; 
          dfs ( i - 1 , j , c , newc , image ) ; 
          dfs ( i + 1 , j , c , newc , image ) ; 
          dfs ( i , j - 1 , c , newc , image ) ; 
          dfs ( i , j + 1 , c , newc , image ) ; 
         
      } 
  public : 
     vector < vector < int >>   floodFill ( vector < vector < int >> &  image ,   int  sr ,   int  sc ,   int  color )   { 
          dfs ( sr , sc , image [ sr ] [ sc ] , color , image ) ; 
          return  image ; 
      } 
  } ;