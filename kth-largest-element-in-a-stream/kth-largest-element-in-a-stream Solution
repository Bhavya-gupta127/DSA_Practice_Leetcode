class   KthLargest   { 
 private : 
      int  k ; 
     priority_queue < int , vector < int > , greater < int >> pq ; 
 public : 
 
      KthLargest ( int  k ,  vector < int > &  nums )   { 
          this -> k = k ; 
          if ( ! nums . empty ( ) ) 
          { 
              sort ( nums . rbegin ( ) , nums . rend ( ) ) ; 
              for ( int  i = 0 ; i < k  &&  i < nums . size ( ) ; i ++ ) 
                 pq . push ( nums [ i ] ) ; 
          } 
      } 
     
      int   add ( int  val )   { 
          if ( k > pq . size ( ) ) 
          { 
             pq . push ( val ) ; 
              return  pq . top ( ) ; 
          } 
          if ( val <= pq . top ( ) ) 
              return  pq . top ( ) ; 
         pq . push ( val ) ; 
         pq . pop ( ) ; 
          return  pq . top ( ) ; 
      } 
 } ; 
 
 /**
  * Your KthLargest object will be instantiated and called as such:
  * KthLargest* obj = new KthLargest(k, nums);
  * int param_1 = obj->add(val);
  */