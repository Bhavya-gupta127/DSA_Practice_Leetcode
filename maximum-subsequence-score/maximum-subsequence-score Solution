class   Solution   { 
 public : 
      long   long   maxScore ( vector < int > &  nums1 ,  vector < int > &  nums2 ,   int  k )   { 
          // 2 4 
          // 3 3 
          // 1 2 
          // 3 1 
 
          // 3 10 
          // 12 9  
          // 4 7 
          // 1 6 
          // 2 5 
 
          // 3 100 
          // 1 80 
          // 3 60  
          // 5 40 
          // 2 20 
         vector < vector < long   long >> v ; 
          for ( int  i = 0 ; i < nums1 . size ( ) ; i ++ ) 
             v . push_back ( { nums2 [ i ] , nums1 [ i ] } ) ; 
          sort ( v . rbegin ( ) , v . rend ( ) ) ; 
          long   long  sum = 0 ; 
          long   long  ans = 0 ; 
         priority_queue < int , vector < int > , greater < int >> pq ; 
          for ( int  i = 0 ; i < nums1 . size ( ) ; i ++ ) 
          { 
             sum += v [ i ] [ 1 ] ; 
             pq . push ( v [ i ] [ 1 ] ) ; 
              if ( pq . size ( ) > k ) 
              { 
                 sum -= pq . top ( ) ; 
                 pq . pop ( ) ; 
              } 
              if ( pq . size ( ) == k ) 
                 ans = max ( ans , sum * ( long   long ) v [ i ] [ 0 ] ) ; 
          } 
          return  ans ; 
      } 
 } ;