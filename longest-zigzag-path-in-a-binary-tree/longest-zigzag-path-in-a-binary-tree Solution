/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
      int   solve ( TreeNode *  root , map < pair < TreeNode * , int > , int > & mp , int  direction ) 
      { 
          if ( root == NULL ) 
              return   0 ; 
 
          if ( mp . count ( { root , direction } ) != 0 ) 
              return  mp [ { root , direction } ] ; 
 
         mp [ { root , 0 } ] = solve ( root -> left , mp , 1 ) + 1 ; 
         mp [ { root , 1 } ] = solve ( root -> right , mp , 0 ) + 1 ; 
 
          return  mp [ { root , direction } ] ; 
      } 
      int   longestZigZag ( TreeNode *  root )   { 
          // 0 means left and 1 means right 
         map < pair < TreeNode * , int > , int > mp ; 
          max ( solve ( root , mp , 0 ) , solve ( root , mp , 1 ) ) ; 
          int  ans = 0 ; 
          for ( auto  i : mp ) 
             ans = max ( ans , i . second ) ; 
          return  ans - 1 ; 
      } 
 } ;