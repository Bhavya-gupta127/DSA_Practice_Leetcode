/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
      int   minDepth ( TreeNode *  root )   { 
         
          if ( root == NULL ) 
              return   0 ; 
          //bfs 
         queue < TreeNode * > q ; 
         TreeNode *  cur ; 
         q . push ( root ) ; 
          int  ans = 0 ; 
          while ( ! q . empty ( ) )     
          { 
              int  s = q . size ( ) ; 
             ans ++ ; 
              for ( int  i = 0 ; i < s ; i ++ ) 
              { 
                 cur = q . front ( ) ; 
                 q . pop ( ) ; 
                  if ( cur -> left == NULL   &&  cur -> right == NULL ) 
                      return  ans ; 
                  if ( cur -> left != NULL ) 
                     q . push ( cur -> left ) ; 
                  if ( cur -> right != NULL ) 
                     q . push ( cur -> right ) ; 
              } 
          } 
          return  ans ; 
      } 
 } ;