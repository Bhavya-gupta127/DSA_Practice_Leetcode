class   Solution   { 
 public : 
      void   dfs ( int  i , vector < vector < int >> &  isConnected , vector < int > & vis ) 
      { 
          if ( i >= vis . size ( ) ) 
              return ; 
         vis [ i ] = 1 ; 
          for ( int  j = 0 ; j < vis . size ( ) ; j ++ ) 
          { 
              if ( isConnected [ i ] [ j ] == 1   &&  vis [ j ] != 1 ) 
                  dfs ( j , isConnected , vis ) ; 
          } 
          return ; 
 
 
      } 
      int   findCircleNum ( vector < vector < int >> &  isConnected )   { 
         vector < int > vis ( isConnected . size ( ) , 0 ) ; 
          int  ans = 0 ;   
          for ( int  i = 0 ; i < vis . size ( ) ; i ++ ) 
          { 
              if ( vis [ i ] != 1 ) 
              { 
                  dfs ( i , isConnected , vis ) ; 
                 ans ++ ; 
              } 
          } 
          return  ans ; 
      } 
 } ;