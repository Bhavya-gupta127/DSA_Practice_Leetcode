class   Solution   { 
 public : 
     
      int   characterReplacement ( string s ,   int  k )   { 
         unordered_map < char , int > mp ; 
          int  maxfz = 0 , totalfz = 0 ; 
          char  maxele ; 
          int  i = 0 ; 
          int  j = 0 ; 
          int  ans = 0 ; 
          while ( i <= j  &&  j < s . size ( ) ) 
          { 
             mp [ s [ j ] ] ++ ; 
             totalfz ++ ; 
              // checkmax(mp); //or use logic that maxfz only need to inc not decrease 
              if ( mp [ s [ j ] ] > maxfz ) 
              { 
                 maxele = s [ j ] ; 
                 maxfz = mp [ s [ j ] ] ; 
              } 
              while ( totalfz - maxfz > k ) 
              { 
                  if ( i >= s . size ( )   ||  j >= s . size ( ) ) 
                      break ; 
                 mp [ s [ i ] ] -- ; 
                 totalfz -- ; 
                  // checkmax(mp); 
                  if ( mp [ s [ j ] ] > maxfz ) 
                  { 
                     maxele = s [ j ] ; 
                     maxfz = mp [ s [ j ] ] ; 
                  } 
                 i ++ ; 
              } 
             ans = max ( ans , j - i + 1 ) ; 
             j ++ ; 
          } 
         ans = max ( ans , j - i ) ; 
          return  ans ; 
         
      } 
 } ;