/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
     
      void   solve ( TreeNode  *  root ) 
      { 
          if ( root == NULL ) 
              return ; 
          solve ( root -> left ) ; 
          solve ( root -> right ) ; 
          if ( root -> left == NULL   &&  root -> right != NULL ) 
          { 
              //new node then swap 
             root -> left = root -> right ; 
             root -> right = NULL ; 
          } 
          else   if ( root -> left != NULL   &&  root -> right == NULL ) 
          { 
              //new node then swap 
             root -> right = root -> left ; 
             root -> left = NULL ; 
          } 
          else   if ( root -> left == NULL   &&  root -> right == NULL ) 
          { 
              return ; 
          } 
          else 
          { 
              swap ( root -> left , root -> right ) ; 
          } 
         
        
         
      } 
     
     
     TreeNode *   invertTree ( TreeNode *  root )   { 
          solve ( root ) ; 
          return  root ; 
      } 
 } ;