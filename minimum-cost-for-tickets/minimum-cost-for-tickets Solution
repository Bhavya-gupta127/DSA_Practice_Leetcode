class   Solution   { 
 public : 
      int   solve ( int  i , vector < int > &  days ,  vector < int > &  costs , int  deadline , vector < int > & dp )   { 
          if ( i >= days . size ( ) ) 
              return   0 ; 
          if ( deadline > days [ i ] ) 
              return   solve ( i + 1 , days , costs , deadline , dp ) ; 
          if ( dp [ i ] != - 1 ) 
              return  dp [ i ] ; 
         
          int  a = solve ( i + 1 , days , costs , days [ i ] + 1 , dp ) + costs [ 0 ] ; 
          int  b = solve ( i + 1 , days , costs , days [ i ] + 7 , dp ) + costs [ 1 ] ; 
          int  c = solve ( i + 1 , days , costs , days [ i ] + 30 , dp ) + costs [ 2 ] ; 
          return  dp [ i ] = min ( a , min ( b , c ) ) ; 
      } 
      int   mincostTickets ( vector < int > &  days ,  vector < int > &  costs )   { 
         vector < int > dp ( days . size ( ) , - 1 ) ; 
          return   solve ( 0 , days , costs , days [ 0 ] , dp ) ; 
      } 
 } ;