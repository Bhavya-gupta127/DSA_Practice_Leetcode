class   Solution   { 
 public : 
      bool   dfs ( int  cur , vector < vector < int >> & graph , vector < int > & vis ) 
      { 
          bool  ans = true ; 
          for ( auto  i : graph [ cur ] ) 
          { 
              if ( vis [ i ] == 0 ) 
              { 
                 vis [ i ] = - 1 * vis [ cur ] ; 
                 ans = ans  &&   dfs ( i , graph , vis ) ; 
              } 
              else   if ( vis [ i ] == vis [ cur ] ) 
                  return   false ; 
          } 
          return  ans ; 
      } 
      bool   isBipartite ( vector < vector < int >> &  graph )   { 
         vector < int > vis ( graph . size ( ) , 0 ) ; 
          bool  ans = true ; 
          for ( int  i = 0 ; i < graph . size ( ) ; i ++ ) 
          { 
              if ( vis [ i ] == 0 ) 
              { 
                 vis [ i ] = 1 ; 
                 ans = ans  &&   dfs ( i , graph , vis ) ; 
              } 
          } 
          return  ans ; 
      } 
 } ;