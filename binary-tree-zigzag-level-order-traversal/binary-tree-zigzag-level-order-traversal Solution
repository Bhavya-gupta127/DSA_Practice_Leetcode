/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
     vector < vector < int >>   zigzagLevelOrder ( TreeNode *  root )   { 
          vector < vector < int >> ans ; 
          if ( root == NULL ) 
              return  ans ; 
         
         queue < TreeNode  * >  q ; 
         q . push ( root ) ; 
             
         
          int  j = 0 ; 
          while ( ! q . empty ( ) ) 
          { 
              int  num = q . size ( ) ; 
             vector < int > v ; 
             stack < int > st ; 
              for ( int  i = 0 ; i < num ; i ++ ) 
              { 
                 TreeNode  *  temp = q . front ( ) ; 
                 q . pop ( ) ; 
                   if ( temp -> left != NULL ) 
                     q . push ( temp -> left ) ; 
                  if ( temp -> right != NULL ) 
                     q . push ( temp -> right ) ; 
                
                
                  if ( j % 2 == 0 ) 
                     v . push_back ( temp -> val ) ; 
                  else 
                     st . push ( temp -> val ) ; 
                 
              } 
              if ( j % 2 == 1 ) 
              { 
                  while ( ! st . empty ( ) ) 
                  { 
                      int  temp2 = st . top ( ) ; 
                     v . push_back ( temp2 ) ; 
                     st . pop ( ) ; 
                  } 
              } 
             ans . push_back ( v ) ; 
             j ++ ; 
             
          } 
         
          return  ans ; 
         
      } 
 } ;