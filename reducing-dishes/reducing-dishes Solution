class   Solution   { 
 public : 
      int   solve ( int  i , int  mul , vector < int > & satisfaction , vector < vector < int >> & dp ) 
      { 
          if ( i >= satisfaction . size ( ) ) 
              return   0 ; 
          if ( dp [ i ] [ mul ] != - 1 ) 
              return  dp [ i ] [ mul ] ; 
          int  pick = 0 ; 
          int  notpick = 0 ; 
         pick = solve ( i + 1 , mul + 1 , satisfaction , dp ) + mul * satisfaction [ i ] ; 
         notpick = solve ( i + 1 , mul , satisfaction , dp ) ; 
          return  dp [ i ] [ mul ] = max ( pick , notpick ) ; 
      } 
      int   maxSatisfaction ( vector < int > &  satisfaction )   { 
          //sort in increasing order 
          //pick notpick 
          int  n = satisfaction . size ( ) ; 
         vector < vector < int >> dp ( n , vector < int > ( n + 1 , - 1 ) ) ; 
          sort ( satisfaction . begin ( ) , satisfaction . end ( ) ) ; 
          return   solve ( 0 , 1 , satisfaction , dp ) ; 
      } 
 } ;