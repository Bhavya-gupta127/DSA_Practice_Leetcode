class   Solution   { 
 public : 
      bool   isvalid ( int  i , int  j , vector < vector < int >> & grid ) 
      { 
          for ( int  k = 0 ; k < grid [ 0 ] . size ( ) ; k ++ ) 
          { 
              if ( grid [ i ] [ k ] == 1   &&  grid [ j ] [ k ] == 1 ) 
                  return   false ; 
          } 
          return   true ; 
      } 
     vector < int >   goodSubsetofBinaryMatrix ( vector < vector < int >> &  grid )   { 
         vector < int > zero ( grid [ 0 ] . size ( ) , 0 ) ; 
          int  n = grid . size ( ) ; 
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              if ( grid [ i ] == zero ) 
                  return   { i } ; 
              for ( int  j = i + 1 ; j < n ; j ++ ) 
              { 
                  if ( isvalid ( i , j , grid ) ) 
                      return   { i , j } ; 
              } 
          } 
          return   { } ; 
      } 
 } ;