class   Solution   { 
 public : 
      bool   check ( map < char , int > & mp , map < char , int > & mp_t ) 
      { 
          for ( auto   & i : mp_t ) 
          { 
              if ( mp [ i . first ] < i . second ) 
                  return   false ; 
          } 
          return   true ; 
      } 
     string  minWindow ( string s ,  string t )   { 
         map < char , int > mp_t ; 
         map < char , int > mp ;   // max size 26+26 => 52 
          for ( auto   & i : t ) 
             mp_t [ i ] ++ ; 
          int  i , j = 0 , ans_start = 0 , min_len = INT_MAX ; 
          for ( i = 0 ; i < s . size ( ) ; i ++ ) 
          { 
             mp [ s [ i ] ] ++ ; 
              while ( check ( mp , mp_t ) ) 
              { 
                  if ( i - j + 1 < min_len ) 
                  { 
                     min_len = i - j + 1 ; 
                     ans_start = j ; 
                  } 
                 mp [ s [ j ++ ] ] -- ; 
              }           
          } 
          if ( min_len == INT_MAX ) 
              return   "" ; 
          return  s . substr ( ans_start , min_len ) ; 
      } 
 } ;