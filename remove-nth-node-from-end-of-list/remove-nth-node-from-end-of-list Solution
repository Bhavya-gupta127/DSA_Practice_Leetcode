/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   removeNthFromEnd ( ListNode *  head ,   int  n )   { 
         
          if ( head == NULL ) 
              return  head ; 
         ListNode * p1 = head ; 
         ListNode * p2 = head ; 
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              if ( p2 == NULL ) 
                  return  head ; 
             p2 = p2 -> next ; 
          } 
          if ( p2 == NULL ) 
          { 
             head = head -> next ; 
              return  head ; 
          } 
         ListNode  *  prev = head ; 
          while ( p2 != NULL ) 
          { 
             prev = p1 ; 
             p1 = p1 -> next ; 
             p2 = p2 -> next ; 
          } 
         prev -> next = p1 -> next ; 
          return  head ; 
      } 
 } ;