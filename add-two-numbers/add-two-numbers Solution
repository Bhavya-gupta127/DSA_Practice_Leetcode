/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   addTwoNumbers ( ListNode *  l1 ,  ListNode *  l2 )   { 
         
          int  carry = 0 ; 
         ListNode  *  ans = NULL ; 
         ListNode  * ansptr ; 
          while ( l1 != NULL   ||  l2 != NULL   ||  carry != 0 ) 
          { 
              int  temp = 0 ; 
              if ( l1 != NULL ) 
              { 
                 temp += l1 -> val ; 
                  l1 = l1 -> next ; 
           
              } 
              if ( l2 != NULL ) 
              { 
                 temp += l2 -> val ; 
                   l2 = l2 -> next ; 
              } 
             temp += carry ; 
             
              if ( temp > 9 ) 
              { 
                 carry = 0 ; 
                  if ( ans == NULL ) 
                  { 
                     ans = new   ListNode (  temp % 10 ) ; 
                     ansptr = ans ; 
                  } 
                  else 
                  {        ans -> next = new   ListNode ( temp % 10 ) ; 
                 
                 ans = ans -> next ; 
              } 
                 carry = temp / 10 ;                
              } 
              else 
              { 
                 carry = 0 ; 
                  if ( ans == NULL ) 
                  { 
                     
                     ans = new   ListNode ( temp ) ; 
                     ansptr = ans ; 
                  } 
                  else 
                  { 
                     ans -> next = new   ListNode ( temp ) ; 
                 
                 ans = ans -> next ; 
                  } 
              } 
            
            
          } 
          return  ansptr ; 
      } 
 } ;