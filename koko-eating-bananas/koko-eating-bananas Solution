class   Solution   { 
 public : 
      int   check ( int  mid , vector < int > &  piles ,   int  h ) 
      { 
          long   long  ans = 0 ; 
          for ( int  i = 0 ; i < piles . size ( ) ; i ++ ) 
          { 
              if ( mid >= piles [ i ] ) 
                 ans ++ ; 
              else 
              { 
                 ans += piles [ i ] / mid ; 
                  if ( piles [ i ] % mid )    
                     ans ++ ; 
              } 
          } 
          return  ans <= ( long   long ) h ? 1 : 0 ; 
      } 
      int   minEatingSpeed ( vector < int > &  piles ,   int  h )   { 
          int  low = 1 ; 
          int  high = 1e9 ; 
          int  mid ; 
          int  ans = 1e9 ; 
          while ( low <= high ) 
          { 
             mid = low + ( high - low ) / 2 ; 
              if ( check ( mid , piles , h ) == 1 )   // 
              { 
                 high = mid - 1 ; 
                 ans = min ( ans , mid ) ; 
              } 
              else 
                 low = mid + 1 ; 
          } 
          return  ans ; 
      } 
 } ;