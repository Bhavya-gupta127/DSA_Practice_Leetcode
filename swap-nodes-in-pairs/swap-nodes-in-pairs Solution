/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
 
     ListNode *   swapPairs ( ListNode *  head )   { 
          if ( head == NULL   ||  head -> next == NULL ) 
              return  head ; 
         ListNode *  ans = head -> next ; 
         ListNode *  next = head -> next ; 
         ListNode *  prev = NULL ; 
         ListNode *  cur = head ; 
       
          while ( cur != NULL   &&  next != NULL ) 
          { 
              if ( prev != NULL ) 
                 prev -> next = next ; 
             ListNode *  temp = next -> next ; 
             next -> next = cur ; 
             cur -> next = temp ; 
 
             prev = cur ; 
             cur = cur -> next ; 
              if ( cur == NULL ) 
                  break ; 
             next = cur -> next ; 
 
          } 
          return  ans ; 
      } 
        // dry run 
          // 1 2 3 4 
 
          // cur=1 
          // next=2 
          // temp=3 
          // 2->next=1 
          // 1->next=3 
          // prev=1 
          // cur=3 
          // next=4 
 
          // 1->next=4 
          // temp=null 
          // 4->next=3 
          // 3->next=NULL 
 
          // prev=4 
          // cur=NUll 
 } ;